variant: fcos
version: 1.3.0
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAmErYAR6kJheLcFGU4w5lW2g88u+HdU5jAbaHAzl5QpCThcWWpsr1sNwvFvwPvugwLJ2dXHu3MFMgHesa1R421GAShTFoclMgR+PNM3wDHfYow+K3X2Wnj4QZ2Z6p4GK+OsDObM63irQONsrNqdZ6eMyqUjr9tSE4on9td2Sohb4DCCxEGYltJCVS+jKmnSAK72aSYOY52ey74wSFE1NQ19l7f8o3858YTrNCUBCeV7Ob+pBYU/6dkrz3/dd5fA/OkpgB/RC47/LKhO///ScrpuLfj3ieROMeS3lvL6cP6clq5UzOHbG8q7v3qMsePVzft2hJGojzu5DBhkaPTo/Euw==
storage:
  files:
    - path: /etc/ssh/sshd_config.d/20-set-port.conf
      mode: 0644
      contents:
        inline: |
          Port 55522
    - path: /usr/local/bin/selinux-ssh-port.sh
      mode: 0744
      contents:
        inline: |
          #!/bin/bash -e
          # source: https://gist.github.com/icedream/75135f63f433ec52d652c7245dd17e30
          #
          # This script runs right before SSH server boots up via Systemd.
          # It is required to be run when on Fedora CoreOS and changing the port SSH is listening on.
          #
          # The script builds a Fedora image with semanage installed (if already built it will not build again).
          # After that it will run semanage to update which ports SSH is allowed to listen on.
          #
          # the SSH port
          ssh_port=55522
          # Just used to get a guaranteed empty Docker context dir
          empty_dir="$(mktemp -d)"
          dockerfile="$(mktemp)"
          cleanup() {
            if [ -d "$empty_dir" ]
            then
              rm -rf "$empty_dir"
            fi
            if [ -f "$dockerfile" ]
            then
              rm -f "$dockerfile"
            fi
          }
          trap cleanup EXIT
          # NOTE - not sure if policycoreutils-devel is necessary here, didn't test it with it removed
          cat >"$dockerfile" <<DEOF
          FROM fedora
          RUN yum install -y policycoreutils-python-utils policycoreutils-devel && yum clean all
          DEOF
          image_name="$(podman build -f "$dockerfile" "$empty_dir" | tail -n1)"
          secontainer() {
            podman run --privileged --rm \
              -v /var/run:/var/run \
              -v /etc/selinux:/etc/selinux \
              -v /proc:/proc \
              -v /sys:/sys \
              "$image_name" "$@"
          }
          secontainer semanage port -a -t ssh_port_t -p tcp "$ssh_port"
systemd:
  units:
    - name: adjust-selinux-for-ssh-port.service
      enabled: true
      contents: |
        [Unit]
        Before=network-online.target
        ConditionPathExists=!/var/lib/selinux-ssh-port

        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/selinux-ssh-port.sh
        ExecStartPost=/usr/bin/touch /var/lib/selinux-ssh-port
        RemainAfterExit=yes

        [Install]
        WantedBy=multi-user.target